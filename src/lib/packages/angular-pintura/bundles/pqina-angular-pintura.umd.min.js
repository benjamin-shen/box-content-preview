!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@pqina/pintura")):"function"==typeof define&&define.amd?define("@pqina/angular-pintura",["exports","@angular/core","@pqina/pintura"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self).pqina=t.pqina||{},t.pqina["angular-pintura"]={}),t.ng.core,t["@pqina/pintura"])}(this,(function(t,e,n){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var p=function(t,e){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function o(t,e){function n(){this.constructor=t}p(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function r(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var p,o,r=n.call(t),i=[];try{for(;(void 0===e||e-- >0)&&!(p=r.next()).done;)i.push(p.value)}catch(t){o={error:t}}finally{try{p&&!p.done&&(n=r.return)&&n.call(r)}finally{if(o)throw o.error}}return i}var i=function(){function t(t,n){var p=this;this.unsubs=[],this.options=void 0,this.init=new e.EventEmitter,this.loadstart=new e.EventEmitter,this.loadabort=new e.EventEmitter,this.loaderror=new e.EventEmitter,this.loadprogress=new e.EventEmitter,this.load=new e.EventEmitter,this.processstart=new e.EventEmitter,this.processabort=new e.EventEmitter,this.processerror=new e.EventEmitter,this.processprogress=new e.EventEmitter,this.process=new e.EventEmitter,this.update=new e.EventEmitter,this.undo=new e.EventEmitter,this.redo=new e.EventEmitter,this.revert=new e.EventEmitter,this.destroy=new e.EventEmitter,this.show=new e.EventEmitter,this.hide=new e.EventEmitter,this.close=new e.EventEmitter,this.ready=new e.EventEmitter,this.loadpreview=new e.EventEmitter,this.addshape=new e.EventEmitter,this.selectshape=new e.EventEmitter,this.updateshape=new e.EventEmitter,this.removeshape=new e.EventEmitter,this.selectstyle=new e.EventEmitter,this.routeEvent=function(t){var e=p[t.type.split(":")[1]];e&&e.emit(t.detail)},this._initialChanges={},this.element=t,this.zone=n}return Object.defineProperty(t.prototype,"imageSize",{get:function(){return this.editor.imageSize},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"imageAspectRatio",{get:function(){return this.editor.imageAspectRatio},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"imageCropSize",{get:function(){return this.editor.imageCropSize},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"imageCropRectAspectRatio",{get:function(){return this.editor.imageCropRectAspectRatio},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"imageFile",{get:function(){return this.editor.imageFile},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"imageLoadState",{get:function(){return this.editor.imageLoadState},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"imageProcessState",{get:function(){return this.editor.imageProcessState},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"imageRotationRange",{get:function(){return this.editor.imageRotationRange},enumerable:!1,configurable:!0}),t.prototype.ngAfterViewInit=function(){var t=this;this.element.nativeElement.classList.add("PinturaRootWrapper"),this.zone.runOutsideAngular((function(){t.editor=t.initEditor(t.element.nativeElement,Object.assign({},t.options,t._initialChanges)),t.unsubs=n.dispatchEditorEvents(t.editor,t.element.nativeElement)})),Object.keys(this).filter((function(n){return t[n]instanceof e.EventEmitter})).forEach((function(e){t.element.nativeElement.addEventListener("pintura:"+e,t.routeEvent)}))},t.prototype.ngOnChanges=function(t){var e=Object.entries(t).reduce((function(t,e){var n=r(e,2),p=n[0],o=n[1];return t[p]=o.currentValue,t}),{});this.editor?Object.assign(this.editor,this.options,e):this._initialChanges=e},t.prototype.ngOnDestroy=function(){var t=this;this._initialChanges=void 0,this.editor&&(this.editor.destroy(),this.unsubs.forEach((function(t){return t()})),this.unsubs=[],Object.keys(this).filter((function(n){return t[n]instanceof e.EventEmitter})).forEach((function(e){t.element.nativeElement.removeEventListener("pintura:"+e,t.routeEvent)})),this.editor=void 0)},t.prototype.ngOnInit=function(){},t}();i.decorators=[{type:e.Component,args:[{selector:"pintura-editor",template:" <ng-content></ng-content> "}]}],i.ctorParameters=function(){return[{type:e.ElementRef},{type:e.NgZone}]},i.propDecorators={options:[{type:e.Input}],id:[{type:e.Input}],class:[{type:e.Input}],animations:[{type:e.Input}],src:[{type:e.Input}],util:[{type:e.Input}],utils:[{type:e.Input}],disabled:[{type:e.Input}],status:[{type:e.Input}],elasticityMultiplier:[{type:e.Input}],layoutDirectionPreference:[{type:e.Input}],layoutVerticalUtilsPreference:[{type:e.Input}],layoutHorizontalUtilsPreference:[{type:e.Input}],imageSourceToImageData:[{type:e.Input}],previewImageData:[{type:e.Input}],previewImageDataMaxSize:[{type:e.Input}],previewUpscale:[{type:e.Input}],shapePreprocessor:[{type:e.Input}],enableButtonClose:[{type:e.Input}],enableButtonExport:[{type:e.Input}],enableButtonResetHistory:[{type:e.Input}],enableButtonRevert:[{type:e.Input}],enableNavigateHistory:[{type:e.Input}],enableToolbar:[{type:e.Input}],enableUtils:[{type:e.Input}],enableDropImage:[{type:e.Input}],enablePasteImage:[{type:e.Input}],handleEvent:[{type:e.Input}],willRequestResource:[{type:e.Input}],willClose:[{type:e.Input}],willRevert:[{type:e.Input}],willProcessImage:[{type:e.Input}],willRenderCanvas:[{type:e.Input}],willSetHistoryInitialState:[{type:e.Input}],willRenderToolbar:[{type:e.Input}],beforeSelectShape:[{type:e.Input}],beforeDeselectShape:[{type:e.Input}],beforeAddShape:[{type:e.Input}],beforeRemoveShape:[{type:e.Input}],beforeUpdateShape:[{type:e.Input}],willRenderShapeControls:[{type:e.Input}],willRenderShapePresetToolbar:[{type:e.Input}],locale:[{type:e.Input}],imageReader:[{type:e.Input}],imageWriter:[{type:e.Input}],imageOrienter:[{type:e.Input}],imageScrambler:[{type:e.Input}],imageBackgroundColor:[{type:e.Input}],imageColorMatrix:[{type:e.Input}],imageConvolutionMatrix:[{type:e.Input}],imageCrop:[{type:e.Input}],imageCropAspectRatio:[{type:e.Input}],imageCropLimitToImage:[{type:e.Input}],imageCropMaxSize:[{type:e.Input}],imageCropMinSize:[{type:e.Input}],imageRedaction:[{type:e.Input}],imageAnnotation:[{type:e.Input}],imageDecoration:[{type:e.Input}],imageFlipX:[{type:e.Input}],imageFlipY:[{type:e.Input}],imageGamma:[{type:e.Input}],imageNoise:[{type:e.Input}],imageRotation:[{type:e.Input}],imageVignette:[{type:e.Input}],imageTargetSize:[{type:e.Input}],imageFrame:[{type:e.Input}],imageMetadata:[{type:e.Input}],imageState:[{type:e.Input}],markupEditorToolbar:[{type:e.Input}],markupEditorToolStyles:[{type:e.Input}],markupEditorShapeStyleControls:[{type:e.Input}],markupEditorToolSelectRadius:[{type:e.Input}],markupEditorTextInputMode:[{type:e.Input}],enableSelectToolToAddShape:[{type:e.Input}],enableTapToAddText:[{type:e.Input}],enableZoom:[{type:e.Input}],enablePan:[{type:e.Input}],enableZoomControls:[{type:e.Input}],markupEditorZoomLevels:[{type:e.Input}],markupEditorZoomAdjustStep:[{type:e.Input}],markupEditorZoomAdjustFactor:[{type:e.Input}],markupEditorWillStartInteraction:[{type:e.Input}],cropAutoCenterImageSelectionTimeout:[{type:e.Input}],cropWillRenderImageSelectionGuides:[{type:e.Input}],cropEnableButtonFlipHorizontal:[{type:e.Input}],cropEnableButtonFlipVertical:[{type:e.Input}],cropEnableButtonRotateLeft:[{type:e.Input}],cropEnableButtonRotateRight:[{type:e.Input}],cropEnableButtonToggleCropLimit:[{type:e.Input}],cropEnableCenterImageSelection:[{type:e.Input}],cropEnableImageSelection:[{type:e.Input}],cropEnableInfoIndicator:[{type:e.Input}],cropEnableLimitWheelInputToCropSelection:[{type:e.Input}],cropEnableRotationInput:[{type:e.Input}],cropEnableSelectPreset:[{type:e.Input}],cropEnableZoomInput:[{type:e.Input}],cropEnableZoomMatchImageAspectRatio:[{type:e.Input}],cropEnableZoomTowardsWheelPosition:[{type:e.Input}],cropEnableZoomAutoHide:[{type:e.Input}],cropImageSelectionCornerStyle:[{type:e.Input}],cropSelectPresetOptions:[{type:e.Input}],cropEnableRotateMatchImageAspectRatio:[{type:e.Input}],cropWillRenderTools:[{type:e.Input}],annotateActiveTool:[{type:e.Input}],annotateEnableButtonFlipVertical:[{type:e.Input}],annotatePresets:[{type:e.Input}],decorateActiveTool:[{type:e.Input}],decorateEnableButtonFlipVertical:[{type:e.Input}],decoratePresets:[{type:e.Input}],filterFunctions:[{type:e.Input}],filterOptions:[{type:e.Input}],finetuneControlConfiguration:[{type:e.Input}],finetuneOptions:[{type:e.Input}],resizeMaxSize:[{type:e.Input}],resizeMinSize:[{type:e.Input}],resizeSizePresetOptions:[{type:e.Input}],resizeWidthPresetOptions:[{type:e.Input}],resizeHeightPresetOptions:[{type:e.Input}],resizeWillRenderFooter:[{type:e.Input}],frameStyles:[{type:e.Input}],frameOptions:[{type:e.Input}],stickers:[{type:e.Input}],stickerStickToImage:[{type:e.Input}],stickersEnableButtonFlipVertical:[{type:e.Input}],init:[{type:e.Output}],loadstart:[{type:e.Output}],loadabort:[{type:e.Output}],loaderror:[{type:e.Output}],loadprogress:[{type:e.Output}],load:[{type:e.Output}],processstart:[{type:e.Output}],processabort:[{type:e.Output}],processerror:[{type:e.Output}],processprogress:[{type:e.Output}],process:[{type:e.Output}],update:[{type:e.Output}],undo:[{type:e.Output}],redo:[{type:e.Output}],revert:[{type:e.Output}],destroy:[{type:e.Output}],show:[{type:e.Output}],hide:[{type:e.Output}],close:[{type:e.Output}],ready:[{type:e.Output}],loadpreview:[{type:e.Output}],addshape:[{type:e.Output}],selectshape:[{type:e.Output}],updateshape:[{type:e.Output}],removeshape:[{type:e.Output}],selectstyle:[{type:e.Output}]};var a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),e.prototype.initEditor=function(t,e){return n.appendEditor(t,e)},e}(i);a.decorators=[{type:e.Component,args:[{selector:"pintura-editor",template:" <ng-content></ng-content> "}]}];var u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),Object.defineProperty(e.prototype,"modal",{get:function(){return this.editor.modal},enumerable:!1,configurable:!0}),e.prototype.initEditor=function(t,e){return n.openEditor(e)},e.prototype.showEditor=function(){this.editor.show()},e.prototype.hideEditor=function(){this.editor.hide()},e.prototype.ngOnDestroy=function(){this.editor&&(this.editor=void 0)},e}(i);u.decorators=[{type:e.Component,args:[{selector:"pintura-editor-modal",template:" <ng-content></ng-content> "}]}],u.propDecorators={preventZoomViewport:[{type:e.Input}],preventScrollBodyIfNeeded:[{type:e.Input}],preventFooterOverlapIfNeeded:[{type:e.Input}],enableAutoHide:[{type:e.Input}],enableAutoDestroy:[{type:e.Input}]};var s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),e.prototype.initEditor=function(t,e){return n.overlayEditor(t,e)},e}(i);s.decorators=[{type:e.Component,args:[{selector:"pintura-editor-overlay",template:" <ng-content></ng-content> "}]}];var l=function(){};l.decorators=[{type:e.NgModule,args:[{declarations:[a,u,s],imports:[],exports:[a,u,s]}]}],t.AngularPinturaModule=l,t.PinturaEditorComponent=a,t.PinturaEditorModalComponent=u,t.PinturaEditorOverlayComponent=s,t.ɵa=i,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=pqina-angular-pintura.umd.min.js.map