{"version":3,"file":"pqina-angular-pintura.js","sources":["../../src/angular-pintura/projects/angular-pintura/src/lib/pintura-editor-abstract.component.ts","../../src/angular-pintura/projects/angular-pintura/src/lib/pintura-editor.component.ts","../../src/angular-pintura/projects/angular-pintura/src/lib/pintura-editor-modal.component.ts","../../src/angular-pintura/projects/angular-pintura/src/lib/pintura-editor-overlay.component.ts","../../src/angular-pintura/projects/angular-pintura/src/lib/angular-pintura.module.ts","../../../src/angular-pintura/projects/angular-pintura/src/public-api.ts","../../../src/angular-pintura/projects/angular-pintura/src/pqina-angular-pintura.ts"],"sourcesContent":["import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    NgZone,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\n\nimport {\n    ImageSource,\n    PinturaEditorOptions,\n    PinturaEditor,\n    PinturaDefaultImageReaderResult,\n    PinturaDefaultImageWriterResult,\n    PinturaReadState,\n    PinturaWriteState,\n    PinturaImageState,\n    PinturaNode,\n    Sticker,\n    PinturaEditorStatus,\n    Size,\n    Rect,\n    Shape,\n    dispatchEditorEvents,\n    Color,\n    ColorMatrix,\n    ConvolutionMatrix,\n    ShapeRectangle,\n    PinturaMetadata,\n    OptionGroup,\n    CropPresetOption,\n    StickerGroup,\n    Effect,\n    SizeOption,\n    LocaleString,\n    MarkupEditorToolStyleDefaults,\n    MarkupEditorShapeStyleControlDefaults,\n    Vector,\n    Filter,\n} from '@pqina/pintura';\n\ntype Unsub = () => void;\n\n@Component({\n    selector: 'pintura-editor',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport abstract class PinturaEditorAbstractComponent<T> implements OnInit {\n    protected element: ElementRef;\n    protected zone: NgZone;\n    private unsubs: Unsub[] = [];\n\n    // A reference to the editor JavaScript instance\n    public editor: PinturaEditor;\n\n    // A shortcut to assign multiple props at once\n    @Input() options: PinturaEditorOptions = undefined;\n\n    // Inputs\n    @Input() id?: string;\n    @Input() class?: string;\n    @Input() animations?: boolean;\n    @Input() src?: ImageSource;\n    @Input() util?: string;\n    @Input() utils?: string[];\n    @Input() disabled?: boolean;\n    @Input() status?: PinturaEditorStatus;\n    @Input() elasticityMultiplier?: number;\n    @Input() layoutDirectionPreference?: 'auto' | 'horizontal' | 'vertical';\n    @Input() layoutVerticalUtilsPreference?: 'left' | 'right';\n    @Input() layoutHorizontalUtilsPreference?: 'bottom' | 'top';\n    @Input() imageSourceToImageData?: (src: any) => Promise<ImageData>;\n    @Input() previewImageData?: ImageBitmap | ImageData | HTMLCanvasElement;\n    @Input() previewImageDataMaxSize?: Size;\n    @Input() previewUpscale?: boolean;\n    @Input() shapePreprocessor?: any;\n    @Input() enableButtonClose?: boolean;\n    @Input() enableButtonExport?: boolean;\n    @Input() enableButtonResetHistory?: boolean;\n    @Input() enableButtonRevert?: boolean;\n    @Input() enableNavigateHistory?: boolean;\n    @Input() enableToolbar?: boolean;\n    @Input() enableUtils?: boolean;\n    @Input() enableDropImage?: boolean;\n    @Input() enablePasteImage?: boolean;\n    @Input() handleEvent?: (type: string, detail: any) => void;\n    @Input() willRequestResource?: (url: string) => boolean;\n    @Input() willClose?: () => Promise<boolean>;\n    @Input() willRevert?: () => Promise<boolean>;\n    @Input() willProcessImage?: () => Promise<boolean>;\n    @Input() willRenderCanvas?: (\n        shapes: {\n            decorationShapes: Shape[];\n            annotationShapes: Shape[];\n            interfaceShapes: Shape[];\n        },\n        state: any\n    ) => {\n        decorationShapes: Shape[];\n        annotationShapes: Shape[];\n        interfaceShapes: Shape[];\n    };\n    @Input() willSetHistoryInitialState?: (initialState: any) => any;\n    @Input() willRenderToolbar?: (\n        nodes: PinturaNode[],\n        env: any,\n        redraw: () => void\n    ) => PinturaNode[];\n    @Input() beforeSelectShape?: (current: Shape | undefined, target: Shape) => boolean;\n    @Input() beforeDeselectShape?: (current: Shape, target: Shape | undefined) => boolean;\n    @Input() beforeAddShape?: (shape: Shape) => boolean;\n    @Input() beforeRemoveShape?: (shape: Shape) => boolean;\n    @Input() beforeUpdateShape?: (shape: Shape, props: any, context: Rect) => Shape;\n    @Input() willRenderShapeControls?: (nodes: PinturaNode[], shapeId: string) => PinturaNode[];\n    @Input() willRenderShapePresetToolbar?: (\n        nodes: PinturaNode[],\n        addPreset: (sticker: Sticker) => void,\n        env: any,\n        redraw: () => void\n    ) => PinturaNode[];\n\n    @Input() locale: any;\n    @Input() imageReader: any[];\n    @Input() imageWriter?: any[];\n    @Input() imageOrienter?: any;\n    @Input() imageScrambler?: any;\n\n    // Image props\n    @Input() imageBackgroundColor?: Color;\n    @Input() imageColorMatrix?: ColorMatrix;\n    @Input() imageConvolutionMatrix?: ConvolutionMatrix;\n    @Input() imageCrop?: Rect;\n    @Input() imageCropAspectRatio?: number | undefined;\n    @Input() imageCropLimitToImage?: boolean;\n    @Input() imageCropMaxSize?: Size;\n    @Input() imageCropMinSize?: Size;\n    @Input() imageRedaction?: ShapeRectangle[];\n    @Input() imageAnnotation?: Shape[];\n    @Input() imageDecoration?: Shape[];\n    @Input() imageFlipX?: boolean;\n    @Input() imageFlipY?: boolean;\n    @Input() imageGamma?: number;\n    @Input() imageNoise?: number;\n    @Input() imageRotation?: number;\n    @Input() imageVignette?: number;\n    @Input() imageTargetSize?: Size;\n    @Input() imageFrame?:\n        | string\n        | {\n              [key: string]: any;\n              frameStyle: string;\n          };\n    @Input() imageMetadata?: PinturaMetadata;\n    @Input() imageState?: any;\n\n    get imageSize(): Size {\n        return this.editor.imageSize;\n    }\n\n    get imageAspectRatio(): number {\n        return this.editor.imageAspectRatio;\n    }\n\n    get imageCropSize(): Size {\n        return this.editor.imageCropSize;\n    }\n\n    get imageCropRectAspectRatio(): number {\n        return this.editor.imageCropRectAspectRatio;\n    }\n\n    get imageFile(): File {\n        return this.editor.imageFile;\n    }\n\n    get imageLoadState(): any {\n        return this.editor.imageLoadState;\n    }\n\n    get imageProcessState(): any {\n        return this.editor.imageProcessState;\n    }\n\n    get imageRotationRange(): [number, number] {\n        return this.editor.imageRotationRange;\n    }\n\n    @Input() markupEditorToolbar?: [string, LocaleString, any][];\n    @Input() markupEditorToolStyles?: MarkupEditorToolStyleDefaults;\n    @Input() markupEditorShapeStyleControls?: MarkupEditorShapeStyleControlDefaults;\n    @Input() markupEditorToolSelectRadius?: number;\n    @Input() markupEditorTextInputMode?: 'modal' | 'inline';\n    @Input() enableSelectToolToAddShape?: boolean;\n    @Input() enableTapToAddText?: boolean;\n    @Input() enableZoom?: boolean;\n    @Input() enablePan?: boolean;\n    @Input() enableZoomControls?: boolean;\n    @Input() markupEditorZoomLevels?: number[];\n    @Input() markupEditorZoomAdjustStep?: number;\n    @Input() markupEditorZoomAdjustFactor?: number;\n    @Input() markupEditorWillStartInteraction?: (point: Vector, image: Rect) => boolean;\n\n    // Plugin props\n    @Input() cropAutoCenterImageSelectionTimeout?: undefined | number;\n    @Input() cropWillRenderImageSelectionGuides?:\n        | undefined\n        | ((\n              interaction: string,\n              interactionFraction: number\n          ) => { rows: number; cols: number; opacity: number });\n    @Input() cropEnableButtonFlipHorizontal?: boolean;\n    @Input() cropEnableButtonFlipVertical?: boolean;\n    @Input() cropEnableButtonRotateLeft?: boolean;\n    @Input() cropEnableButtonRotateRight?: boolean;\n    @Input() cropEnableButtonToggleCropLimit?: boolean;\n    @Input() cropEnableCenterImageSelection?: boolean;\n    @Input() cropEnableImageSelection?: boolean;\n    @Input() cropEnableInfoIndicator?: boolean;\n    @Input() cropEnableLimitWheelInputToCropSelection?: boolean;\n    @Input() cropEnableRotationInput?: boolean;\n    @Input() cropEnableSelectPreset?: boolean;\n    @Input() cropEnableZoomInput?: boolean;\n    @Input() cropEnableZoomMatchImageAspectRatio?: boolean;\n    @Input() cropEnableZoomTowardsWheelPosition?: boolean;\n    @Input() cropEnableZoomAutoHide?: boolean;\n    @Input() cropImageSelectionCornerStyle?: undefined | 'hook' | 'round' | 'invisible';\n    @Input() cropSelectPresetOptions?: OptionGroup[] | CropPresetOption[];\n    @Input() cropEnableRotateMatchImageAspectRatio?: 'never' | 'custom' | 'always';\n    @Input() cropWillRenderTools?: (\n        nodes: PinturaNode[],\n        env: any,\n        redraw: () => void\n    ) => PinturaNode[];\n\n    @Input() annotateActiveTool?: string;\n    @Input() annotateEnableButtonFlipVertical?: boolean;\n    @Input() annotatePresets?: Sticker[] | StickerGroup[];\n\n    @Input() decorateActiveTool?: string;\n    @Input() decorateEnableButtonFlipVertical?: boolean;\n    @Input() decoratePresets?: Sticker[] | StickerGroup[];\n\n    @Input() filterFunctions?: { [key: string]: Filter };\n    @Input() filterOptions?: any;\n\n    @Input() finetuneControlConfiguration?: { [key: string]: Effect };\n    @Input() finetuneOptions?: [string | undefined, LocaleString];\n\n    @Input() resizeMaxSize?: Size;\n    @Input() resizeMinSize?: Size;\n    @Input() resizeSizePresetOptions?: OptionGroup[] | SizeOption[];\n    @Input() resizeWidthPresetOptions?: OptionGroup[] | SizeOption[];\n    @Input() resizeHeightPresetOptions?: OptionGroup[] | SizeOption[];\n    @Input() resizeWillRenderFooter?: (\n        nodes: PinturaNode[],\n        env: any,\n        redraw: () => void\n    ) => PinturaNode[];\n\n    @Input() frameStyles?: {\n        [key: string]: {\n            shape: {\n                frameStyle: string;\n                [key: string]: any;\n            };\n            thumb: string;\n        };\n    };\n    @Input() frameOptions?: [string | undefined, LocaleString];\n\n    @Input() stickers?: Sticker[] | StickerGroup[];\n    @Input() stickerStickToImage?: boolean;\n    @Input() stickersEnableButtonFlipVertical?: boolean;\n\n    // Events\n    @Output() init: EventEmitter<PinturaEditor> = new EventEmitter<PinturaEditor>();\n    @Output() loadstart: EventEmitter<void> = new EventEmitter<void>();\n    @Output() loadabort: EventEmitter<PinturaReadState> = new EventEmitter<PinturaReadState>();\n    @Output() loaderror: EventEmitter<PinturaReadState> = new EventEmitter<PinturaReadState>();\n    @Output() loadprogress: EventEmitter<PinturaReadState> = new EventEmitter<PinturaReadState>();\n    @Output() load: EventEmitter<PinturaDefaultImageReaderResult> =\n        new EventEmitter<PinturaDefaultImageReaderResult>();\n    @Output() processstart: EventEmitter<void> = new EventEmitter<void>();\n    @Output() processabort: EventEmitter<PinturaWriteState> = new EventEmitter<PinturaWriteState>();\n    @Output() processerror: EventEmitter<PinturaWriteState> = new EventEmitter<PinturaWriteState>();\n    @Output() processprogress: EventEmitter<PinturaWriteState> =\n        new EventEmitter<PinturaWriteState>();\n    @Output() process: EventEmitter<PinturaDefaultImageWriterResult> =\n        new EventEmitter<PinturaDefaultImageWriterResult>();\n    @Output() update: EventEmitter<PinturaImageState> = new EventEmitter<PinturaImageState>();\n    @Output() undo: EventEmitter<number> = new EventEmitter<number>();\n    @Output() redo: EventEmitter<number> = new EventEmitter<number>();\n    @Output() revert: EventEmitter<void> = new EventEmitter<void>();\n    @Output() destroy: EventEmitter<void> = new EventEmitter<void>();\n    @Output() show: EventEmitter<void> = new EventEmitter<void>();\n    @Output() hide: EventEmitter<void> = new EventEmitter<void>();\n    @Output() close: EventEmitter<void> = new EventEmitter<void>();\n    @Output() ready: EventEmitter<void> = new EventEmitter<void>();\n    @Output() loadpreview: EventEmitter<ImageData | ImageBitmap> = new EventEmitter<\n        ImageData | ImageBitmap\n    >();\n    @Output() addshape: EventEmitter<Shape> = new EventEmitter<Shape>();\n    @Output() selectshape: EventEmitter<Shape> = new EventEmitter<Shape>();\n    @Output() updateshape: EventEmitter<Shape> = new EventEmitter<Shape>();\n    @Output() removeshape: EventEmitter<Shape> = new EventEmitter<Shape>();\n    @Output() selectstyle: EventEmitter<{ [key: string]: unknown }> = new EventEmitter<{\n        [key: string]: unknown;\n    }>();\n\n    constructor(element: ElementRef, zone: NgZone) {\n        this.element = element;\n        this.zone = zone;\n    }\n\n    // EventHandlerNonNull\n    private routeEvent = (e: CustomEvent) => {\n        const emitter = this[e.type.split(':')[1]];\n        if (!emitter) return;\n        emitter.emit(e.detail);\n    };\n\n    abstract initEditor(element: HTMLElement, props: PinturaEditorOptions): PinturaEditor;\n\n    private _initialChanges = {};\n\n    ngAfterViewInit(): void {\n        this.element.nativeElement.classList.add('PinturaRootWrapper');\n\n        // will block angular from listening to events inside the editor\n        this.zone.runOutsideAngular(() => {\n            // create editor instance\n            this.editor = this.initEditor(\n                this.element.nativeElement,\n                Object.assign(\n                    {},\n                    // deprecated options object\n                    this.options,\n\n                    // new changes object\n                    this._initialChanges\n                )\n            );\n\n            // route events to component native element\n            this.unsubs = dispatchEditorEvents(this.editor, this.element.nativeElement);\n        });\n\n        // route events\n        Object.keys(this)\n            .filter((key) => this[key] instanceof EventEmitter)\n            .forEach((key) => {\n                this.element.nativeElement.addEventListener(`pintura:${key}`, this.routeEvent);\n            });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // turn into options object ready to be assigned to editor\n        const options = Object.entries(changes).reduce((options, [prop, change]) => {\n            options[prop] = change.currentValue;\n            return options;\n        }, {});\n\n        // no editor yet, let's store the object for when the editor loads\n        if (!this.editor) {\n            this._initialChanges = options;\n            return;\n        }\n\n        // an editor is active, let's assign the options to the editor\n        Object.assign(\n            this.editor,\n\n            // old options object\n            this.options,\n\n            // new merged changes\n            options\n        );\n    }\n\n    ngOnDestroy(): void {\n        this._initialChanges = undefined;\n\n        if (!this.editor) return;\n\n        this.editor.destroy();\n\n        // unsubscribe\n        this.unsubs.forEach((unsub) => unsub());\n        this.unsubs = [];\n\n        // unroute events\n        Object.keys(this)\n            .filter((key) => this[key] instanceof EventEmitter)\n            .forEach((key) => {\n                this.element.nativeElement.removeEventListener(`pintura:${key}`, this.routeEvent);\n            });\n\n        this.editor = undefined;\n    }\n\n    ngOnInit(): void {\n        // Do nothing\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { appendEditor, PinturaEditor, PinturaEditorOptions } from '@pqina/pintura';\nimport { PinturaEditorAbstractComponent } from './pintura-editor-abstract.component';\n\n@Component({\n    selector: 'pintura-editor',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport class PinturaEditorComponent<T> extends PinturaEditorAbstractComponent<T> implements OnInit {\n    initEditor(element: HTMLElement, props: PinturaEditorOptions): PinturaEditor {\n        return appendEditor(element, props);\n    }\n}\n","import { Input, Component, OnInit } from '@angular/core';\nimport { openEditor, PinturaEditorModal, PinturaEditorOptions } from '@pqina/pintura';\nimport { PinturaEditorAbstractComponent } from './pintura-editor-abstract.component';\n\n@Component({\n    selector: 'pintura-editor-modal',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport class PinturaEditorModalComponent<T>\n    extends PinturaEditorAbstractComponent<T>\n    implements OnInit\n{\n    @Input() preventZoomViewport?: boolean;\n    @Input() preventScrollBodyIfNeeded?: boolean;\n    @Input() preventFooterOverlapIfNeeded?: boolean;\n    @Input() enableAutoHide?: boolean;\n    @Input() enableAutoDestroy?: boolean;\n\n    get modal(): HTMLElement {\n        return (<PinturaEditorModal>this.editor).modal;\n    }\n\n    initEditor(element: HTMLElement, props: PinturaEditorOptions): PinturaEditorModal {\n        return openEditor(props);\n    }\n\n    showEditor(): void {\n        (this.editor as PinturaEditorModal).show();\n    }\n\n    hideEditor(): void {\n        (this.editor as PinturaEditorModal).hide();\n    }\n\n    ngOnDestroy(): void {\n        if (!this.editor) return;\n        this.editor = undefined;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { overlayEditor, PinturaEditor, PinturaEditorOptions } from '@pqina/pintura';\nimport { PinturaEditorAbstractComponent } from './pintura-editor-abstract.component';\n\n@Component({\n    selector: 'pintura-editor-overlay',\n    template: ` <ng-content></ng-content> `,\n    styles: [],\n})\nexport class PinturaEditorOverlayComponent<T>\n    extends PinturaEditorAbstractComponent<T>\n    implements OnInit\n{\n    initEditor(element: HTMLElement, props: PinturaEditorOptions): PinturaEditor {\n        return overlayEditor(element, props);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { PinturaEditorComponent } from './pintura-editor.component';\nimport { PinturaEditorModalComponent } from './pintura-editor-modal.component';\nimport { PinturaEditorOverlayComponent } from './pintura-editor-overlay.component';\n\n@NgModule({\n    declarations: [\n        PinturaEditorComponent,\n        PinturaEditorModalComponent,\n        PinturaEditorOverlayComponent,\n    ],\n    imports: [],\n    exports: [PinturaEditorComponent, PinturaEditorModalComponent, PinturaEditorOverlayComponent],\n})\nexport class AngularPinturaModule {}\n","/*\n * Public API Surface of angular-pintura\n */\n\nexport * from './lib/pintura-editor.component';\nexport * from './lib/pintura-editor-modal.component';\nexport * from './lib/pintura-editor-overlay.component';\nexport * from './lib/angular-pintura.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {PinturaEditorAbstractComponent as ɵa} from './lib/pintura-editor-abstract.component';"],"names":[],"mappings":"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"}